#pragma checksum "C:\Users\Admin\Documents\GitHub\desktop-tutorial\DoAnASP.NET25112020\DoAn\DoAn\Views\Login\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7310e8697f7b2f164fcdccf93e720211a7edbd36"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Login_Index), @"mvc.1.0.view", @"/Views/Login/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Admin\Documents\GitHub\desktop-tutorial\DoAnASP.NET25112020\DoAn\DoAn\Views\_ViewImports.cshtml"
using DoAn;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Admin\Documents\GitHub\desktop-tutorial\DoAnASP.NET25112020\DoAn\DoAn\Views\_ViewImports.cshtml"
using DoAn.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7310e8697f7b2f164fcdccf93e720211a7edbd36", @"/Views/Login/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5a83c55cd82221897cc1898333fffa30a9b06739", @"/Views/_ViewImports.cshtml")]
    public class Views_Login_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<!-- Modal -->
<div class=""modal fade"" id=""form-modal"" tabindex=""-1"" role=""dialog"" aria-hidden=""true"" data-backdrop=""false"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title""></h5>
            </div>
            <div class=""modal-body"">

            </div>
            <div class=""modal-footer"">
                <center><button type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">Đóng</button></center>
            </div>
        </div>
    </div>
</div>
<!-- End Modal -->

<input class=""form-control"" type=""text"" id=""UserName"" name=""UserName"" placeholder=""User Name"" />
<input class=""form-control"" type=""password"" id=""Password"" name=""Password"" placeholder=""Password"" />
<button class=""btn btn-primary"" onclick=""Login()"" name=""abc"" value=""submit"" style=""margin-top: -23px;height: 39px"">Login</button>


<!--Login FB-->
<div class=""fb-login-button"" data-width="""" data-size=""large"" ");
            WriteLiteral("data-button-type=\"login_with\" data-layout=\"default\" data-auto-logout-link=\"true\" data-use-continue-as=\"true\"></div>\r\n<p id=\"demo\"></p>\r\n<!--End Login FB-->\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <!------------------------------------------------------------------------------------------------------------>
    <!--Tải và khởi chạy JavaScript SDK trong trang HTML-->
    <script>
        function statusChangeCallback(response) {  // Called with the results from FB.getLoginStatus().
            console.log('statusChangeCallback');
            console.log(response);                   // The current login status of the person.
            if (response.status === 'connected') {   // Logged into your webpage and Facebook.
                testAPI();
            } else {                                 // Not logged into your webpage or we are unable to tell.
                document.getElementById('status').innerHTML = 'Please log ' +
                    'into this webpage.';
            }
        }


        function checkLoginState() {               // Called when a person is finished with the Login Button.
            FB.getLoginStatus(function (response) {   // See the onlogin handle");
                WriteLiteral(@"r
                statusChangeCallback(response);
            });
        }


        window.fbAsyncInit = function () {
            FB.init({
                appId: '444705446538678',
                cookie: true,                     // Enable cookies to allow the server to access the session.
                xfbml: true,                     // Parse social plugins on this webpage.
                version: 'v9.0'           // Use this Graph API version for this call.
            });


            FB.getLoginStatus(function (response) {   // Called after the JS SDK has been initialized.
                statusChangeCallback(response);        // Returns the login status.
            });
        };

        function testAPI() {                      // Testing Graph API after login.  See statusChangeCallback() for when this call is made.
            console.log('Welcome!  Fetching your information.... ');
            FB.api('/me', function (response) {
                console.log('Successfu");
                WriteLiteral(@"l login for: ' + response.name);
                document.getElementById('status').innerHTML =
                    'Thanks for logging in, ' + response.name + '!';
            });
        }
    </script>


    <!-- The JS SDK Login Button -->

    <fb:login-button scope=""public_profile,email"" onlogin=""checkLoginState();"">
    </fb:login-button>

    <div id=""status"">
    </div>

    <!-- Load the JS SDK asynchronously -->
    <script async defer crossorigin=""anonymous"" src=""https://connect.facebook.net/en_US/sdk.js""></script>

    <!--JavaScript SDK FB-->
    <div id=""fb-root""></div>
    <script async defer crossorigin=""anonymous"" src=""https://connect.facebook.net/vi_VN/sdk.js#xfbml=1&version=v9.0&appId=444705446538678&autoLogAppEvents=1"" nonce=""94VAP1Hg"">
    </script>
    <!--End tải và khởi chạy JavaScript SDK trong trang HTML-->
    <!------------------------------------------------------------------------------------------------------------>
    <!--Kiểm tra tài khoản và mật khẩu");
                WriteLiteral(@" rỗng-->


    <script>
        function Login() {
            var username = $(""#UserName"").val();
            var pass = $(""#Password"").val();

            if (username == """" && pass == """") {
                $('#form-modal .modal-body').html(""Không được để trống tài khoản hoặc mật khẩu !!!"");
                $('#form-modal .modal-title').html(""Thông báo"");
                $('#form-modal').modal('show');
            }
            else {
                $.ajax({
                    method: ""GET"",
                    url: ""../api/LoginAPI/GetAccount"",
                    data: {
                        'username': username,
                        'password': pass
                    },


                    success: function (status) {
                        //Neu ghi JSON.stringify(status) luc nay thi status co gtr la:
                        //""{\""TenTK\"":\""Admin\"",\""MatKhau\"":\""123\"",\""LoaiTK\"":0}"" nen phai thuc hien JSON.parse()

                        var statusAfter = JSON.p");
                WriteLiteral(@"arse(status); //Luc nay statusAfter co kdl la JSON va gtr la:
                        //{ ""TenTK"": ""Admin"", ""MatKhau"": ""123"", ""LoaiTK"": 0 }

                        //Kiem tra tai khoan co ton tai hay khong

                        if (statusAfter != null) {
                            if (statusAfter != null) {
                                if (statusAfter.LoaiTK == 0) window.location.href = '");
#nullable restore
#line 134 "C:\Users\Admin\Documents\GitHub\desktop-tutorial\DoAnASP.NET25112020\DoAn\DoAn\Views\Login\Index.cshtml"
                                                                                Write(Url.Action("","Admin"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\r\n                                else if (statusAfter.LoaiTK == 1) window.location.href = \'");
#nullable restore
#line 135 "C:\Users\Admin\Documents\GitHub\desktop-tutorial\DoAnASP.NET25112020\DoAn\DoAn\Views\Login\Index.cshtml"
                                                                                     Write(Url.Action("Index","Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                            }
                        }
                        else {
                            $('#form-modal .modal-body').html(""Sai tài khoản hoặc mật khẩu rồi bro ơi :(((("");
                            $('#form-modal .modal-title').html(""Thông báo"");
                            $('#form-modal').modal('show');
                            $(""#UserName"").val("""");
                            $(""#Password"").val("""");
                        }
                    }
                })
            }
        }
        
    </script>


");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
